Building DAG of jobs...
shared_storage_local_copies: True
remote_exec: False
Using shell: /usr/bin/bash
Provided cores: 24
Rules claiming more threads will be scaled down.
Conda environments: ignored
Job stats:
job            count
-----------  -------
all                1
trim_galore        6
total              7

Resources before job selection: {'_cores': 24, '_nodes': 9223372036854775807}
Ready jobs (6)
Select jobs to execute...
Selected jobs (3)
Resources after job selection: {'_cores': 0, '_nodes': 9223372036854775804}
Execute 3 jobs...

[Tue Aug 13 23:53:44 2024]
localrule trim_galore:
    input: /home/lucianhu/rna_snakemake/rna_snakemake/test-datasets/testdata/SRR6357073_1.fastq.gz
    output: results/trimmed/RAP1_REP1_treatment
    log: logs/trim_galore/RAP1_REP1_treatment.trimmed.log
    jobid: 4
    reason: Code has changed since last execution
    wildcards: sample=RAP1_REP1_treatment
    threads: 8
    resources: tmpdir=/tmp

unlocking
removing lock
removing lock
removed all locks
Full Traceback (most recent call last):
  File "/home/lucianhu/micromamba/envs/rna_snakemake/lib/python3.12/site-packages/snakemake/utils.py", line 427, in format
    return fmt.format(_pattern, *args, **variables)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lucianhu/micromamba/envs/rna_snakemake/lib/python3.12/string.py", line 190, in format
    return self.vformat(format_string, args, kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lucianhu/micromamba/envs/rna_snakemake/lib/python3.12/string.py", line 194, in vformat
    result, _ = self._vformat(format_string, args, kwargs, used_args, 2)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lucianhu/micromamba/envs/rna_snakemake/lib/python3.12/string.py", line 234, in _vformat
    obj, arg_used = self.get_field(field_name, args, kwargs)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lucianhu/micromamba/envs/rna_snakemake/lib/python3.12/string.py", line 299, in get_field
    obj = self.get_value(first, args, kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lucianhu/micromamba/envs/rna_snakemake/lib/python3.12/string.py", line 256, in get_value
    return kwargs[key]
           ~~~~~~^^^^^
KeyError: 'sample'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lucianhu/micromamba/envs/rna_snakemake/lib/python3.12/site-packages/snakemake/jobs.py", line 948, in format_wildcards
    return format(string, **_variables)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lucianhu/micromamba/envs/rna_snakemake/lib/python3.12/site-packages/snakemake/utils.py", line 433, in format
    raise NameError(
NameError: The name 'sample' is unknown in this context. Did you mean 'wildcards.sample'?

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lucianhu/micromamba/envs/rna_snakemake/lib/python3.12/site-packages/snakemake/cli.py", line 2103, in args_to_api
    dag_api.execute_workflow(
  File "/home/lucianhu/micromamba/envs/rna_snakemake/lib/python3.12/site-packages/snakemake/api.py", line 594, in execute_workflow
    workflow.execute(
  File "/home/lucianhu/micromamba/envs/rna_snakemake/lib/python3.12/site-packages/snakemake/workflow.py", line 1248, in execute
    raise e
  File "/home/lucianhu/micromamba/envs/rna_snakemake/lib/python3.12/site-packages/snakemake/workflow.py", line 1244, in execute
    success = self.scheduler.schedule()
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lucianhu/micromamba/envs/rna_snakemake/lib/python3.12/site-packages/snakemake/scheduler.py", line 313, in schedule
    self.run(
  File "/home/lucianhu/micromamba/envs/rna_snakemake/lib/python3.12/site-packages/snakemake/scheduler.py", line 406, in run
    executor.run_jobs(jobs)
  File "/home/lucianhu/micromamba/envs/rna_snakemake/lib/python3.12/site-packages/snakemake_interface_executor_plugins/executors/base.py", line 71, in run_jobs
    self.run_job_pre(job)
  File "/home/lucianhu/micromamba/envs/rna_snakemake/lib/python3.12/site-packages/snakemake_interface_executor_plugins/executors/base.py", line 86, in run_job_pre
    self.printjob(job)
  File "/home/lucianhu/micromamba/envs/rna_snakemake/lib/python3.12/site-packages/snakemake_interface_executor_plugins/executors/base.py", line 110, in printjob
    job.log_info()
  File "/home/lucianhu/micromamba/envs/rna_snakemake/lib/python3.12/site-packages/snakemake/jobs.py", line 1042, in log_info
    logger.shellcmd(self.shellcmd, indent=indent)
                    ^^^^^^^^^^^^^
  File "/home/lucianhu/micromamba/envs/rna_snakemake/lib/python3.12/site-packages/snakemake/jobs.py", line 601, in shellcmd
    self.format_wildcards(self.rule.shellcmd)
  File "/home/lucianhu/micromamba/envs/rna_snakemake/lib/python3.12/site-packages/snakemake/jobs.py", line 950, in format_wildcards
    raise RuleException(
snakemake.exceptions.RuleException: NameError: The name 'sample' is unknown in this context. Did you mean 'wildcards.sample'?, when formatting the following:

        mkdir -p {output.trimmed_dir}
        if [ -z "{input.fq2}" ]; then
            # Single-end reads
            trim_galore {params.extra} --cores {threads}                 --gzip                 --output_dir {output.trimmed_dir}                 {input.fq1}                 2> {log}
            mv *_1_trimmed.fq.gz {sample}.trimmed_R1.fq.gz
        else
            # Paired-end reads
            trim_galore {params.extra} --cores {threads}                 --paired                 --gzip                 --output_dir {output.trimmed_dir}                 {input.fq1} {input.fq2}                 2> {log}
            mv *_1_val_1.fq.gz {sample}.trimmed_R1.fq.gz
            mv *_2_val_2.fq.gz {sample}.trimmed_R2.fq.gz
        fi
        

RuleException in rule trim_galore in file /home/lucianhu/rna_snakemake/test_ting/Snakefile, line 35:
NameError: The name 'sample' is unknown in this context. Did you mean 'wildcards.sample'?, when formatting the following:

        mkdir -p {output.trimmed_dir}
        if [ -z "{input.fq2}" ]; then
            # Single-end reads
            trim_galore {params.extra} --cores {threads}                 --gzip                 --output_dir {output.trimmed_dir}                 {input.fq1}                 2> {log}
            mv *_1_trimmed.fq.gz {sample}.trimmed_R1.fq.gz
        else
            # Paired-end reads
            trim_galore {params.extra} --cores {threads}                 --paired                 --gzip                 --output_dir {output.trimmed_dir}                 {input.fq1} {input.fq2}                 2> {log}
            mv *_1_val_1.fq.gz {sample}.trimmed_R1.fq.gz
            mv *_2_val_2.fq.gz {sample}.trimmed_R2.fq.gz
        fi
        
