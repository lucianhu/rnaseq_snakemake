Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.9
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 8 cores

igzip detected. Using igzip for decompressing

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/trimmed/WT_REP1_control/ doesn't exist, creating it for you...

Output will be written into the directory: /home/lucianhu/rna_snakemake/test_ting/results/trimmed/WT_REP1_control/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /home/lucianhu/rna_snakemake/rna_snakemake/test-datasets/testdata/SRR6357070_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	1916	AGATCGGAAGAGC	50000	3.83
Nextera	0	CTGTCTCTTATA	50000	0.00
smallRNA	0	TGGAATTCTCGG	50000	0.00
Using Illumina adapter for trimming (count: 1916). Second best hit was Nextera (count: 0)

Writing report to '/home/lucianhu/rna_snakemake/test_ting/results/trimmed/WT_REP1_control/SRR6357070_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /home/lucianhu/rna_snakemake/rna_snakemake/test-datasets/testdata/SRR6357070_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.10
Cutadapt version: 4.9
Python version: could not detect
Number of cores used for trimming: 8
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '-t 12'
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.9). Setting -j 8
Writing final adapter and quality trimmed output to SRR6357070_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file /home/lucianhu/rna_snakemake/rna_snakemake/test-datasets/testdata/SRR6357070_1.fastq.gz <<< 
This is cutadapt 4.9 with Python 3.12.4
Command line parameters: -j 8 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC /home/lucianhu/rna_snakemake/rna_snakemake/test-datasets/testdata/SRR6357070_1.fastq.gz
Processing single-end reads on 8 cores ...
Finished in 0.145 s (2.907 µs/read; 20.64 M reads/minute).

=== Summary ===

Total reads processed:                  50,000
Reads with adapters:                    20,148 (40.3%)
Reads written (passing filters):        50,000 (100.0%)

Total basepairs processed:     5,050,000 bp
Quality-trimmed:                  13,402 bp (0.3%)
Total written (filtered):      4,954,410 bp (98.1%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 20148 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 26.7%
  C: 24.8%
  G: 21.4%
  T: 27.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	11785	12500.0	0	11785
2	3364	3125.0	0	3364
3	1003	781.2	0	1003
4	534	195.3	0	534
5	241	48.8	0	241
6	208	12.2	0	208
7	227	3.1	0	227
8	185	0.8	0	185
9	182	0.2	0	181 1
10	188	0.0	1	169 19
11	131	0.0	1	122 9
12	134	0.0	1	127 7
13	133	0.0	1	127 6
14	141	0.0	1	135 6
15	123	0.0	1	119 4
16	110	0.0	1	107 3
17	131	0.0	1	123 8
18	89	0.0	1	88 1
19	111	0.0	1	107 4
20	82	0.0	1	82
21	94	0.0	1	92 2
22	73	0.0	1	72 1
23	81	0.0	1	78 3
24	72	0.0	1	68 4
25	60	0.0	1	60
26	48	0.0	1	43 5
27	54	0.0	1	50 4
28	65	0.0	1	64 1
29	60	0.0	1	59 1
30	51	0.0	1	49 2
31	32	0.0	1	32
32	31	0.0	1	29 2
33	43	0.0	1	40 3
34	27	0.0	1	26 1
35	32	0.0	1	32
36	26	0.0	1	25 1
37	19	0.0	1	17 2
38	11	0.0	1	10 1
39	22	0.0	1	22
40	13	0.0	1	12 1
41	31	0.0	1	30 1
42	9	0.0	1	9
43	4	0.0	1	4
44	7	0.0	1	6 1
45	8	0.0	1	8
46	10	0.0	1	10
47	4	0.0	1	4
48	10	0.0	1	10
49	9	0.0	1	8 1
50	13	0.0	1	13
51	3	0.0	1	3
52	4	0.0	1	4
53	4	0.0	1	4
54	3	0.0	1	3
56	3	0.0	1	3
57	2	0.0	1	2
58	1	0.0	1	1
59	2	0.0	1	2
61	1	0.0	1	1
62	2	0.0	1	2
63	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: /home/lucianhu/rna_snakemake/rna_snakemake/test-datasets/testdata/SRR6357070_1.fastq.gz
=============================================
50000 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/home/lucianhu/rna_snakemake/test_ting/results/trimmed/WT_REP1_control/SRR6357070_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /home/lucianhu/rna_snakemake/rna_snakemake/test-datasets/testdata/SRR6357070_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.10
Cutadapt version: 4.9
Python version: could not detect
Number of cores used for trimming: 8
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '-t 12'
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.9). Setting -j -j 8
Writing final adapter and quality trimmed output to SRR6357070_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file /home/lucianhu/rna_snakemake/rna_snakemake/test-datasets/testdata/SRR6357070_2.fastq.gz <<< 
This is cutadapt 4.9 with Python 3.12.4
Command line parameters: -j 8 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC /home/lucianhu/rna_snakemake/rna_snakemake/test-datasets/testdata/SRR6357070_2.fastq.gz
Processing single-end reads on 8 cores ...
Finished in 0.136 s (2.724 µs/read; 22.03 M reads/minute).

=== Summary ===

Total reads processed:                  50,000
Reads with adapters:                    22,302 (44.6%)
Reads written (passing filters):        50,000 (100.0%)

Total basepairs processed:     5,050,000 bp
Quality-trimmed:                  34,479 bp (0.7%)
Total written (filtered):      4,931,665 bp (97.7%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 22302 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 33.9%
  C: 30.5%
  G: 17.5%
  T: 17.9%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
1	14286	12500.0	0	14286
2	2800	3125.0	0	2800
3	1344	781.2	0	1344
4	386	195.3	0	386
5	274	48.8	0	274
6	207	12.2	0	207
7	224	3.1	0	224
8	199	0.8	0	199
9	189	0.2	0	181 8
10	170	0.0	1	163 7
11	122	0.0	1	117 5
12	154	0.0	1	152 2
13	118	0.0	1	115 3
14	160	0.0	1	155 5
15	114	0.0	1	108 6
16	98	0.0	1	93 5
17	162	0.0	1	155 7
18	69	0.0	1	68 1
19	114	0.0	1	111 3
20	77	0.0	1	72 5
21	81	0.0	1	78 3
22	79	0.0	1	78 1
23	81	0.0	1	78 3
24	79	0.0	1	75 4
25	51	0.0	1	47 4
26	55	0.0	1	53 2
27	45	0.0	1	43 2
28	76	0.0	1	75 1
29	46	0.0	1	44 2
30	67	0.0	1	66 1
31	19	0.0	1	19
32	35	0.0	1	33 2
33	39	0.0	1	37 2
34	31	0.0	1	31
35	32	0.0	1	32
36	26	0.0	1	25 1
37	13	0.0	1	13
38	17	0.0	1	17
39	19	0.0	1	18 1
40	13	0.0	1	12 1
41	18	0.0	1	18
42	16	0.0	1	16
43	7	0.0	1	7
44	8	0.0	1	8
45	9	0.0	1	9
46	10	0.0	1	10
47	3	0.0	1	3
48	11	0.0	1	11
49	9	0.0	1	9
50	12	0.0	1	10 2
51	4	0.0	1	4
52	4	0.0	1	3 1
53	5	0.0	1	5
54	2	0.0	1	2
56	2	0.0	1	2
57	3	0.0	1	3
58	1	0.0	1	1
59	2	0.0	1	1 1
61	1	0.0	1	1
62	2	0.0	1	2
63	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: /home/lucianhu/rna_snakemake/rna_snakemake/test-datasets/testdata/SRR6357070_2.fastq.gz
=============================================
50000 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR6357070_1_trimmed.fq.gz and SRR6357070_2_trimmed.fq.gz
file_1: SRR6357070_1_trimmed.fq.gz, file_2: SRR6357070_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: SRR6357070_1_trimmed.fq.gz and SRR6357070_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to SRR6357070_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to SRR6357070_2_val_2.fq.gz

Total number of sequences analysed: 50000

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 253 (0.51%)


  >>> Now running FastQC on the validated data SRR6357070_1_val_1.fq.gz<<<

Started analysis of SRR6357070_1_val_1.fq.gz
Approx 5% complete for SRR6357070_1_val_1.fq.gz
Approx 10% complete for SRR6357070_1_val_1.fq.gz
Approx 15% complete for SRR6357070_1_val_1.fq.gz
Approx 20% complete for SRR6357070_1_val_1.fq.gz
Approx 25% complete for SRR6357070_1_val_1.fq.gz
Approx 30% complete for SRR6357070_1_val_1.fq.gz
Approx 35% complete for SRR6357070_1_val_1.fq.gz
Approx 40% complete for SRR6357070_1_val_1.fq.gz
Approx 45% complete for SRR6357070_1_val_1.fq.gz
Approx 50% complete for SRR6357070_1_val_1.fq.gz
Approx 55% complete for SRR6357070_1_val_1.fq.gz
Approx 60% complete for SRR6357070_1_val_1.fq.gz
Approx 65% complete for SRR6357070_1_val_1.fq.gz
Approx 70% complete for SRR6357070_1_val_1.fq.gz
Approx 75% complete for SRR6357070_1_val_1.fq.gz
Approx 80% complete for SRR6357070_1_val_1.fq.gz
Approx 85% complete for SRR6357070_1_val_1.fq.gz
Approx 90% complete for SRR6357070_1_val_1.fq.gz
Approx 95% complete for SRR6357070_1_val_1.fq.gz

  >>> Now running FastQC on the validated data SRR6357070_2_val_2.fq.gz<<<

Started analysis of SRR6357070_2_val_2.fq.gz
Approx 5% complete for SRR6357070_2_val_2.fq.gz
Approx 10% complete for SRR6357070_2_val_2.fq.gz
Approx 15% complete for SRR6357070_2_val_2.fq.gz
Approx 20% complete for SRR6357070_2_val_2.fq.gz
Approx 25% complete for SRR6357070_2_val_2.fq.gz
Approx 30% complete for SRR6357070_2_val_2.fq.gz
Approx 35% complete for SRR6357070_2_val_2.fq.gz
Approx 40% complete for SRR6357070_2_val_2.fq.gz
Approx 45% complete for SRR6357070_2_val_2.fq.gz
Approx 50% complete for SRR6357070_2_val_2.fq.gz
Approx 55% complete for SRR6357070_2_val_2.fq.gz
Approx 60% complete for SRR6357070_2_val_2.fq.gz
Approx 65% complete for SRR6357070_2_val_2.fq.gz
Approx 70% complete for SRR6357070_2_val_2.fq.gz
Approx 75% complete for SRR6357070_2_val_2.fq.gz
Approx 80% complete for SRR6357070_2_val_2.fq.gz
Approx 85% complete for SRR6357070_2_val_2.fq.gz
Approx 90% complete for SRR6357070_2_val_2.fq.gz
Approx 95% complete for SRR6357070_2_val_2.fq.gz
Deleting both intermediate output files SRR6357070_1_trimmed.fq.gz and SRR6357070_2_trimmed.fq.gz

====================================================================================================

