Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.9
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 8 cores

igzip detected. Using igzip for decompressing

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/trimmed/WT_REP2_control/ doesn't exist, creating it for you...

Output will be written into the directory: /home/lucianhu/rna_snakemake/test_ting/results/trimmed/WT_REP2_control/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /home/lucianhu/rna_snakemake/rna_snakemake/test-datasets/testdata/SRR6357071_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	1966	AGATCGGAAGAGC	50000	3.93
Nextera	0	CTGTCTCTTATA	50000	0.00
smallRNA	0	TGGAATTCTCGG	50000	0.00
Using Illumina adapter for trimming (count: 1966). Second best hit was Nextera (count: 0)

Writing report to '/home/lucianhu/rna_snakemake/test_ting/results/trimmed/WT_REP2_control/SRR6357071_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /home/lucianhu/rna_snakemake/rna_snakemake/test-datasets/testdata/SRR6357071_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.10
Cutadapt version: 4.9
Python version: could not detect
Number of cores used for trimming: 8
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '-t 12'
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.9). Setting -j 8
Writing final adapter and quality trimmed output to SRR6357071_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file /home/lucianhu/rna_snakemake/rna_snakemake/test-datasets/testdata/SRR6357071_1.fastq.gz <<< 
This is cutadapt 4.9 with Python 3.12.4
Command line parameters: -j 8 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC /home/lucianhu/rna_snakemake/rna_snakemake/test-datasets/testdata/SRR6357071_1.fastq.gz
Processing single-end reads on 8 cores ...
Finished in 0.131 s (2.620 µs/read; 22.90 M reads/minute).

=== Summary ===

Total reads processed:                  50,000
Reads with adapters:                    20,057 (40.1%)
Reads written (passing filters):        50,000 (100.0%)

Total basepairs processed:     5,050,000 bp
Quality-trimmed:                  10,364 bp (0.2%)
Total written (filtered):      4,958,450 bp (98.2%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 20057 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 27.1%
  C: 22.5%
  G: 25.0%
  T: 25.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	11601	12500.0	0	11601
2	3391	3125.0	0	3391
3	991	781.2	0	991
4	549	195.3	0	549
5	231	48.8	0	231
6	253	12.2	0	253
7	218	3.1	0	218
8	193	0.8	0	193
9	168	0.2	0	168
10	214	0.0	1	197 17
11	128	0.0	1	126 2
12	150	0.0	1	146 4
13	149	0.0	1	145 4
14	151	0.0	1	148 3
15	132	0.0	1	131 1
16	113	0.0	1	111 2
17	122	0.0	1	120 2
18	113	0.0	1	113
19	120	0.0	1	119 1
20	85	0.0	1	84 1
21	85	0.0	1	83 2
22	89	0.0	1	89
23	71	0.0	1	69 2
24	66	0.0	1	65 1
25	60	0.0	1	58 2
26	59	0.0	1	57 2
27	53	0.0	1	52 1
28	66	0.0	1	66
29	44	0.0	1	42 2
30	50	0.0	1	50
31	39	0.0	1	39
32	28	0.0	1	28
33	38	0.0	1	38
34	32	0.0	1	30 2
35	14	0.0	1	14
36	22	0.0	1	22
37	20	0.0	1	20
38	20	0.0	1	20
39	8	0.0	1	8
40	19	0.0	1	19
41	19	0.0	1	19
42	5	0.0	1	5
43	7	0.0	1	7
44	10	0.0	1	10
45	7	0.0	1	7
46	12	0.0	1	12
47	7	0.0	1	7
48	6	0.0	1	6
49	8	0.0	1	8
50	3	0.0	1	3
51	4	0.0	1	4
52	3	0.0	1	3
53	3	0.0	1	3
55	1	0.0	1	1
57	2	0.0	1	2
59	1	0.0	1	1
61	1	0.0	1	1
62	1	0.0	1	1
63	1	0.0	1	1
65	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: /home/lucianhu/rna_snakemake/rna_snakemake/test-datasets/testdata/SRR6357071_1.fastq.gz
=============================================
50000 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/home/lucianhu/rna_snakemake/test_ting/results/trimmed/WT_REP2_control/SRR6357071_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /home/lucianhu/rna_snakemake/rna_snakemake/test-datasets/testdata/SRR6357071_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.10
Cutadapt version: 4.9
Python version: could not detect
Number of cores used for trimming: 8
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '-t 12'
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.9). Setting -j -j 8
Writing final adapter and quality trimmed output to SRR6357071_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file /home/lucianhu/rna_snakemake/rna_snakemake/test-datasets/testdata/SRR6357071_2.fastq.gz <<< 
This is cutadapt 4.9 with Python 3.12.4
Command line parameters: -j 8 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC /home/lucianhu/rna_snakemake/rna_snakemake/test-datasets/testdata/SRR6357071_2.fastq.gz
Processing single-end reads on 8 cores ...
Finished in 0.124 s (2.477 µs/read; 24.23 M reads/minute).

=== Summary ===

Total reads processed:                  50,000
Reads with adapters:                    22,471 (44.9%)
Reads written (passing filters):        50,000 (100.0%)

Total basepairs processed:     5,050,000 bp
Quality-trimmed:                  28,078 bp (0.6%)
Total written (filtered):      4,938,728 bp (97.8%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 22471 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 35.3%
  C: 27.3%
  G: 19.7%
  T: 17.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	14224	12500.0	0	14224
2	2930	3125.0	0	2930
3	1338	781.2	0	1338
4	459	195.3	0	459
5	268	48.8	0	268
6	243	12.2	0	243
7	215	3.1	0	215
8	190	0.8	0	190
9	179	0.2	0	177 2
10	194	0.0	1	193 1
11	121	0.0	1	118 3
12	161	0.0	1	152 9
13	125	0.0	1	122 3
14	172	0.0	1	168 4
15	118	0.0	1	116 2
16	120	0.0	1	120
17	157	0.0	1	155 2
18	79	0.0	1	77 2
19	121	0.0	1	120 1
20	83	0.0	1	81 2
21	69	0.0	1	66 3
22	95	0.0	1	94 1
23	68	0.0	1	66 2
24	73	0.0	1	73
25	47	0.0	1	45 2
26	72	0.0	1	66 6
27	52	0.0	1	52
28	67	0.0	1	64 3
29	38	0.0	1	38
30	54	0.0	1	53 1
31	39	0.0	1	39
32	23	0.0	1	23
33	37	0.0	1	37
34	36	0.0	1	36
35	13	0.0	1	12 1
36	22	0.0	1	21 1
37	21	0.0	1	21
38	17	0.0	1	17
39	12	0.0	1	11 1
40	16	0.0	1	16
41	17	0.0	1	17
42	8	0.0	1	8
43	8	0.0	1	8
44	12	0.0	1	12
45	6	0.0	1	6
46	15	0.0	1	15
47	4	0.0	1	4
48	8	0.0	1	8
49	5	0.0	1	5
50	3	0.0	1	3
51	4	0.0	1	4
52	2	0.0	1	2
53	3	0.0	1	3
55	1	0.0	1	1
56	1	0.0	1	1
57	1	0.0	1	1
59	1	0.0	1	1
61	1	0.0	1	1
62	1	0.0	1	1
63	1	0.0	1	1
66	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: /home/lucianhu/rna_snakemake/rna_snakemake/test-datasets/testdata/SRR6357071_2.fastq.gz
=============================================
50000 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR6357071_1_trimmed.fq.gz and SRR6357071_2_trimmed.fq.gz
file_1: SRR6357071_1_trimmed.fq.gz, file_2: SRR6357071_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: SRR6357071_1_trimmed.fq.gz and SRR6357071_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to SRR6357071_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to SRR6357071_2_val_2.fq.gz

Total number of sequences analysed: 50000

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 181 (0.36%)


  >>> Now running FastQC on the validated data SRR6357071_1_val_1.fq.gz<<<

Started analysis of SRR6357071_1_val_1.fq.gz
Approx 5% complete for SRR6357071_1_val_1.fq.gz
Approx 10% complete for SRR6357071_1_val_1.fq.gz
Approx 15% complete for SRR6357071_1_val_1.fq.gz
Approx 20% complete for SRR6357071_1_val_1.fq.gz
Approx 25% complete for SRR6357071_1_val_1.fq.gz
Approx 30% complete for SRR6357071_1_val_1.fq.gz
Approx 35% complete for SRR6357071_1_val_1.fq.gz
Approx 40% complete for SRR6357071_1_val_1.fq.gz
Approx 45% complete for SRR6357071_1_val_1.fq.gz
Approx 50% complete for SRR6357071_1_val_1.fq.gz
Approx 55% complete for SRR6357071_1_val_1.fq.gz
Approx 60% complete for SRR6357071_1_val_1.fq.gz
Approx 65% complete for SRR6357071_1_val_1.fq.gz
Approx 70% complete for SRR6357071_1_val_1.fq.gz
Approx 75% complete for SRR6357071_1_val_1.fq.gz
Approx 80% complete for SRR6357071_1_val_1.fq.gz
Approx 85% complete for SRR6357071_1_val_1.fq.gz
Approx 90% complete for SRR6357071_1_val_1.fq.gz
Approx 95% complete for SRR6357071_1_val_1.fq.gz

  >>> Now running FastQC on the validated data SRR6357071_2_val_2.fq.gz<<<

Started analysis of SRR6357071_2_val_2.fq.gz
Approx 5% complete for SRR6357071_2_val_2.fq.gz
Approx 10% complete for SRR6357071_2_val_2.fq.gz
Approx 15% complete for SRR6357071_2_val_2.fq.gz
Approx 20% complete for SRR6357071_2_val_2.fq.gz
Approx 25% complete for SRR6357071_2_val_2.fq.gz
Approx 30% complete for SRR6357071_2_val_2.fq.gz
Approx 35% complete for SRR6357071_2_val_2.fq.gz
Approx 40% complete for SRR6357071_2_val_2.fq.gz
Approx 45% complete for SRR6357071_2_val_2.fq.gz
Approx 50% complete for SRR6357071_2_val_2.fq.gz
Approx 55% complete for SRR6357071_2_val_2.fq.gz
Approx 60% complete for SRR6357071_2_val_2.fq.gz
Approx 65% complete for SRR6357071_2_val_2.fq.gz
Approx 70% complete for SRR6357071_2_val_2.fq.gz
Approx 75% complete for SRR6357071_2_val_2.fq.gz
Approx 80% complete for SRR6357071_2_val_2.fq.gz
Approx 85% complete for SRR6357071_2_val_2.fq.gz
Approx 90% complete for SRR6357071_2_val_2.fq.gz
Approx 95% complete for SRR6357071_2_val_2.fq.gz
Deleting both intermediate output files SRR6357071_1_trimmed.fq.gz and SRR6357071_2_trimmed.fq.gz

====================================================================================================

